[{"id":1,"type":"Imperative Programming","description":"In this paradigm, the program is structured around a set of instructions that modify the state of the program."},{"id":2,"type":"Declarative Programming","description":"In this paradigm, the focus is on describing the problem to be solved, rather than specifying how to solve it."},{"id":3,"type":"Declarative Programming / Logic Programming","description":"Programs are expressed in terms of logical rules. Examples of logic programming languages include Prolog and Datalog."},{"id":4,"type":"Declarative Programming / Functional Programming","description":"Programs are made up of pure functions that have no side effects. Examples of functional programming languages include Haskell, Lisp, and Erlang."},{"id":5,"type":"Object Oriented Programming (OOP)","description":"In this paradigm, programs are modeled as collections of objects that interact with each other by exchanging messages."},{"id":6,"type":"Event Oriented Programming","description":"In this paradigm, programs respond to external or internal events generated by the system or the user."},{"id":7,"type":"Procedural Programming","description":"This paradigm is similar to imperative programming, but focuses on modularizing code into procedures or functions."},{"id":8,"type":"Structured Programming","description":"This paradigm focuses on the use of control structures such as sequences, selects, and loops to organize code in a clear and understandable way."},{"id":9,"type":"Generic Programming","description":"Generic programming focuses on writing algorithms and data structures that can work with abstract data types."},{"id":10,"type":"Modular Programming","description":"This paradigm is based on dividing the program into independent and autonomous modules, each with its own specific functionality."},{"id":11,"type":"Reactive Programming","description":"This paradigm focuses on the automatic propagation of data changes through the application in response to events."},{"id":12,"type":"Rule-Based Programming","description":"This paradigm focuses on the description of logical rules that govern the behavior of the program."}]